{"changed":true,"filter":false,"title":"app.py","tooltip":"/app.py","value":"import os\nimport bcrypt\nfrom flask import Flask, flash, render_template, redirect, request, url_for, \\\n    session\nfrom forms.forms import AddRecipeForm, LoginForm, SignupForm\nfrom flask_pymongo import PyMongo\nfrom bson.objectid import ObjectId\nfrom werkzeug.utils import secure_filename\n\napp = Flask(__name__)\n\napp.config['MONGO_DBNAME'] = 'bakingBookRecipes'\napp.config['MONGO_URI'] = os.getenv('MONGO_URI', 'mongodb://localhost')\napp.secret_key = os.getenv('SECRET')\n\n\nmongo = PyMongo(app)\n\n@app.route('/')\n@app.route('/show_recipes')\ndef show_recipes():\n    return render_template('recipes.html',\n                           recipes=mongo.db.recipes.find())\n\"\"\"error handler function taken from https://flask.palletsprojects.com/en/1.1.x/patterns/errorpages/\"\"\" \n@app.errorhandler(404)\ndef page_not_found(e):\n    return render_template('404error.html'), 404\n\n@app.route('/about')\ndef about():\n    return render_template('about.html')\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    \"\"\" If user already logged in redirect to homepage \"\"\"\n    if 'logged_in' in session:\n        return redirect(url_for('show_recipes'))\n    \"\"\" If user not logged in, check db for username \"\"\"\n    form = LoginForm(request.form)\n    if request.method == 'POST':\n        users = mongo.db.users\n        login_username = users.find_one({'user': request.form['username'\n                ]})\n        \"\"\" If username exists, check password matches \"\"\"\n        if login_username is not None:\n            if bcrypt.checkpw(request.form['password'].encode('utf-8'),\n                              login_username['password'].encode('utf-8'\n                              )):\n                session['username'] = request.form['username']\n                session['logged_in'] = True\n                return redirect(url_for('show_recipes'))\n        \"\"\" If username and password combination is not correct \"\"\"\n        return render_template('login.html', form=form) \\\n            + '<p class=\"invalid-message\">Invalid username / password combination</p>'\n    return render_template('login.html', form=form)\n\n\n@app.route('/logout')\ndef logout():\n    session.clear()\n    return redirect(url_for('show_recipes'))\n\n\n@app.route('/sign_up', methods=['GET', 'POST'])\ndef sign_up():\n    form = SignupForm(request.form)\n    if request.method == 'POST':\n        users = mongo.db.users\n        \"\"\" Check if username already exists in the db \"\"\"\n        existing_user = users.find_one({'user': request.form['username'\n                ]})\n        \"\"\" If username does not already exist, hash pw and store \"\"\"\n        if existing_user is None:\n            hashpass = bcrypt.hashpw(request.form['password'\n                    ].encode('utf-8'), bcrypt.gensalt())\n            users.insert_one({'user': request.form['username'],\n                             'password': hashpass.decode(), 'saved_recipes':''})\n            session['username'] = request.form['username']\n            \"\"\" Return user to login form to log in \"\"\"\n            return redirect(url_for('login'))\n        else: flash('That username already exists, please choose another.')\n    return render_template('signup.html', form=form)\n\n\n@app.route('/recipe_card/<recipe_id>')\ndef recipe_card(recipe_id):\n    return render_template('recipecard.html',\n                           recipes=mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)}))\n\n\n@app.route('/save_recipe/<recipe_id>', methods=['GET', 'POST'])\ndef save_recipe(recipe_id):\n    \"\"\"Check user is logged in \"\"\"\n    if 'logged_in' in session:\n        recipe = ObjectId(recipe_id)\n        user = mongo.db.users.find_one({'user': session['username']})\n        saved = user['saved_recipes']\n        \"\"\"Check recipe is not already saved\"\"\"\n        if recipe not in saved:\n            mongo.db.users.update_one({'user': session['username']}, {\"$push\": {\"saved_recipes\": recipe}})\n            flash(\"Recipe has been saved\")\n        else:\n            flash(\"You have already saved this recipe\")\n    return render_template('recipecard.html',\n                           recipes=mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)}))\n\n@app.route('/my_saved_recipes', methods=['GET', 'POST'])\ndef my_saved_recipes():\n    \"\"\" Check user is logged in \"\"\"\n    if 'logged_in' in session:\n        user = mongo.db.users.find_one({'user': session['username']})\n        saved = user['saved_recipes']\n        if saved == []:\n            flash(\"You haven't saved any recipes yet\")\n        return render_template('savedrecipes.html',recipes=mongo.db.recipes.find({'_id': {\"$in\": saved}}))\n    return render_template('404error.html')\n\n@app.route('/unsave_recipe/<recipe_id>', methods=['GET', 'POST'])\ndef unsave_recipe(recipe_id):\n    \"\"\" Check user is logged in \"\"\"\n    if 'logged_in' in session:\n        user = mongo.db.users.find_one({'user': session['username']})\n        \"\"\" Remove recipe from saved_recipes array in db \"\"\"\n        mongo.db.users.update_one({'user': session['username']}, {\"$pull\": {\"saved_recipes\": ObjectId(recipe_id)}})\n        saved = user['saved_recipes']\n        return render_template('savedrecipes.html',\n                           recipes=mongo.db.recipes.find({'_id': {\"$in\": saved}}))\n    return render_template('404error.html')\n\n\n@app.route('/submit_recipe', methods=['GET', 'POST'])\ndef submit_recipe():\n    \"\"\" Check user is logged in \"\"\"\n    if 'logged_in' in session:\n        new_recipe = None\n        form = AddRecipeForm(request.form)\n        recipes = mongo.db.recipes\n        form_normal = request.form.to_dict()\n        flat_form = request.form.to_dict(flat=False)\n        if request.method == 'POST':\n            default_img_url = '/static/images/default.png'\n            input_img_url = request.form['recipe_url']\n            if input_img_url != '' and input_img_url.lower().endswith(('.png', '.jpg', '.jpeg', '.tiff', '.bmp', '.gif')):\n                recipe_url = input_img_url\n            else:\n                recipe_url = default_img_url\n            new_recipe = recipes.insert_one({\n                'recipe_title': form_normal['recipe_title'],\n                'sub_title': form_normal['sub_title'],\n                'makes': form_normal['makes'],\n                'takes': form_normal['takes'],\n                'ingredients': flat_form['ingredients'],\n                'method': flat_form['method'],\n                'created_by': session['username'],\n                'recipe_url': recipe_url\n                })\n            return redirect(url_for('recipe_card',\n                            recipe_id=new_recipe.inserted_id))\n        return render_template('submitrecipe.html', form=form)\n    return render_template('404error.html')\n\n@app.route('/my_recipes')\ndef my_recipes():\n    if 'logged_in' in session:\n        \"\"\" Get username of logged in user \"\"\"\n        username = session['username']\n        return render_template('myrecipes.html',\n                           recipes=mongo.db.recipes.find({'created_by': username}))\n    return render_template('404error.html')\n\n\n@app.route('/edit_recipe/<recipe_id>', methods=['GET', 'POST'])\ndef edit_recipe(recipe_id):\n    \"\"\" Check user is logged in \"\"\"\n    if 'logged_in' in session:\n        recipe = mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)})\n        \"\"\" check recipe was created by logged in user \"\"\"\n        if recipe['created_by'] == session['username']:\n            form = AddRecipeForm()\n            \"\"\" Populate AddRecipeForm with data from db \"\"\"\n            form = AddRecipeForm(data=recipe)\n            form.ingredients.data = recipe['ingredients']\n            form.method.data = recipe['method']\n        \n            if request.method == 'POST':\n                form_normal = request.form.to_dict()\n                flat_form = request.form.to_dict(flat=False)\n                mongo.db.recipes.update({'_id' : ObjectId(recipe_id)}, {\n                    'recipe_title': form_normal['recipe_title'],\n                    'sub_title': form_normal['sub_title'],\n                    'makes': form_normal['makes'],\n                    'takes': form_normal['takes'],\n                    'ingredients': flat_form['ingredients'],\n                    'method': flat_form['method'],\n                    'created_by' : session['username'],\n                    'recipe_url': form_normal['recipe_url']\n                    })\n                return render_template('recipecard.html', recipes=mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)}))\n            return render_template('editrecipe.html', recipe=recipe, form=form)\n        return render_template('404error.html')\n    return render_template('404error.html')\n\n@app.route('/delete_recipe/<recipe_id>')\ndef delete_recipe(recipe_id):\n    \"\"\" Check user is logged in \"\"\"\n    if 'logged_in' in session:\n        recipes = mongo.db.recipes\n        recipes.remove({'_id': ObjectId(recipe_id)})\n        return redirect(url_for('my_recipes'))\n    return render_template('404error.html')\n    \n@app.route('/search_results', methods=[\"GET\", \"POST\"])\ndef search_results():\n    if request.method == 'POST':\n        keywords = request.form.get(\"keywords\")\n        \"\"\" Text index on mongodb set for recipe title and subtitle\"\"\"\n        recipes=mongo.db.recipes.find({\"$text\": { \"$search\": keywords}})\n        if recipes.count() == 0:\n            flash(\"I'm sorry that search returned no results\")\n        return render_template('recipes.html', recipes=recipes )\n\n\nif __name__ == '__main__':\n    app.run(host=os.environ.get('IP'), port=int(os.environ.get('PORT'\n            )), debug=True)\n","undoManager":{"mark":26,"position":28,"stack":[[{"start":{"row":249,"column":0},"end":{"row":250,"column":0},"action":"insert","lines":["",""],"id":6165},{"start":{"row":250,"column":0},"end":{"row":251,"column":0},"action":"insert","lines":["",""]},{"start":{"row":251,"column":0},"end":{"row":251,"column":1},"action":"insert","lines":["#"]},{"start":{"row":251,"column":1},"end":{"row":251,"column":2},"action":"insert","lines":["t"]},{"start":{"row":251,"column":2},"end":{"row":251,"column":3},"action":"insert","lines":["e"]},{"start":{"row":251,"column":3},"end":{"row":251,"column":4},"action":"insert","lines":["s"]}],[{"start":{"row":251,"column":4},"end":{"row":251,"column":5},"action":"insert","lines":["t"],"id":6166},{"start":{"row":251,"column":5},"end":{"row":251,"column":6},"action":"insert","lines":["i"]},{"start":{"row":251,"column":6},"end":{"row":251,"column":7},"action":"insert","lines":["n"]},{"start":{"row":251,"column":7},"end":{"row":251,"column":8},"action":"insert","lines":["g"]}],[{"start":{"row":251,"column":8},"end":{"row":251,"column":9},"action":"insert","lines":[" "],"id":6167},{"start":{"row":251,"column":9},"end":{"row":251,"column":10},"action":"insert","lines":["r"]},{"start":{"row":251,"column":10},"end":{"row":251,"column":11},"action":"insert","lines":["e"]},{"start":{"row":251,"column":11},"end":{"row":251,"column":12},"action":"insert","lines":["m"]},{"start":{"row":251,"column":12},"end":{"row":251,"column":13},"action":"insert","lines":["o"]},{"start":{"row":251,"column":13},"end":{"row":251,"column":14},"action":"insert","lines":["t"]},{"start":{"row":251,"column":14},"end":{"row":251,"column":15},"action":"insert","lines":["e"]}],[{"start":{"row":251,"column":15},"end":{"row":251,"column":16},"action":"insert","lines":[" "],"id":6168},{"start":{"row":251,"column":16},"end":{"row":251,"column":17},"action":"insert","lines":["c"]},{"start":{"row":251,"column":17},"end":{"row":251,"column":18},"action":"insert","lines":["o"]},{"start":{"row":251,"column":18},"end":{"row":251,"column":19},"action":"insert","lines":["n"]},{"start":{"row":251,"column":19},"end":{"row":251,"column":20},"action":"insert","lines":["n"]},{"start":{"row":251,"column":20},"end":{"row":251,"column":21},"action":"insert","lines":["e"]},{"start":{"row":251,"column":21},"end":{"row":251,"column":22},"action":"insert","lines":["c"]},{"start":{"row":251,"column":22},"end":{"row":251,"column":23},"action":"insert","lines":["t"]},{"start":{"row":251,"column":23},"end":{"row":251,"column":24},"action":"insert","lines":["i"]},{"start":{"row":251,"column":24},"end":{"row":251,"column":25},"action":"insert","lines":["o"]},{"start":{"row":251,"column":25},"end":{"row":251,"column":26},"action":"insert","lines":["n"]}],[{"start":{"row":249,"column":0},"end":{"row":251,"column":26},"action":"remove","lines":["","","#testing remote connection"],"id":6169}],[{"start":{"row":141,"column":11},"end":{"row":162,"column":47},"action":"remove","lines":[" try:","                test_image = request.form['recipe_url']","                if url_parse(test_image).scheme:","                    if url_parse(test_image).scheme == 'data':","                        recipe_image = default_image_url","                    else:","                        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.3'}","                        url_request = urllib.request.Request(test_image, headers = headers)","                        test = urllib.request.urlopen(url_request)","                        #gets url type","                        url_type = test.info()['Content-type']","                    if url_type.endswith(\"png\") or url_type.endswith(\"jpeg\") or url_type.endswith(\"gif\"):","                        recipe_image = request.form[\"recipe_url\"]","                    else:","                        recipe_image = default_image_url","                else:","                #if user created a faulty url, default image is used","                    recipe_image = default_image","            except Exception as e:","               #inform them that a general error has occurred","               pass","               recipe_image = default_image_url"],"id":6170},{"start":{"row":141,"column":10},"end":{"row":141,"column":11},"action":"remove","lines":[" "]},{"start":{"row":141,"column":9},"end":{"row":141,"column":10},"action":"remove","lines":[" "]},{"start":{"row":141,"column":8},"end":{"row":141,"column":9},"action":"remove","lines":[" "]},{"start":{"row":141,"column":4},"end":{"row":141,"column":8},"action":"remove","lines":["    "]},{"start":{"row":141,"column":0},"end":{"row":141,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":144,"column":12},"end":{"row":144,"column":14},"action":"remove","lines":["# "],"id":6171},{"start":{"row":145,"column":12},"end":{"row":145,"column":14},"action":"remove","lines":["# "]},{"start":{"row":146,"column":12},"end":{"row":146,"column":14},"action":"remove","lines":["# "]},{"start":{"row":147,"column":12},"end":{"row":147,"column":14},"action":"remove","lines":["# "]},{"start":{"row":148,"column":12},"end":{"row":148,"column":14},"action":"remove","lines":["# "]}],[{"start":{"row":144,"column":12},"end":{"row":144,"column":13},"action":"remove","lines":["#"],"id":6172},{"start":{"row":144,"column":8},"end":{"row":144,"column":12},"action":"remove","lines":["    "]},{"start":{"row":144,"column":4},"end":{"row":144,"column":8},"action":"remove","lines":["    "]},{"start":{"row":144,"column":0},"end":{"row":144,"column":4},"action":"remove","lines":["    "]},{"start":{"row":143,"column":12},"end":{"row":144,"column":0},"action":"remove","lines":["",""]},{"start":{"row":143,"column":8},"end":{"row":143,"column":12},"action":"remove","lines":["    "]},{"start":{"row":143,"column":4},"end":{"row":143,"column":8},"action":"remove","lines":["    "]},{"start":{"row":143,"column":0},"end":{"row":143,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":142,"column":12},"end":{"row":143,"column":0},"action":"remove","lines":["",""],"id":6173},{"start":{"row":142,"column":8},"end":{"row":142,"column":12},"action":"remove","lines":["    "]},{"start":{"row":142,"column":4},"end":{"row":142,"column":8},"action":"remove","lines":["    "]},{"start":{"row":142,"column":0},"end":{"row":142,"column":4},"action":"remove","lines":["    "]},{"start":{"row":141,"column":0},"end":{"row":142,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":140,"column":58},"end":{"row":141,"column":0},"action":"remove","lines":["",""],"id":6174}],[{"start":{"row":140,"column":58},"end":{"row":141,"column":0},"action":"insert","lines":["",""],"id":6175},{"start":{"row":141,"column":0},"end":{"row":141,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":143,"column":42},"end":{"row":144,"column":0},"action":"insert","lines":["",""],"id":6176},{"start":{"row":144,"column":0},"end":{"row":144,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":144,"column":12},"end":{"row":144,"column":16},"action":"remove","lines":["    "],"id":6177}],[{"start":{"row":144,"column":12},"end":{"row":144,"column":13},"action":"insert","lines":["e"],"id":6178},{"start":{"row":144,"column":13},"end":{"row":144,"column":14},"action":"insert","lines":["l"]},{"start":{"row":144,"column":14},"end":{"row":144,"column":15},"action":"insert","lines":["s"]},{"start":{"row":144,"column":15},"end":{"row":144,"column":16},"action":"insert","lines":["e"]}],[{"start":{"row":144,"column":16},"end":{"row":144,"column":17},"action":"insert","lines":[" "],"id":6179},{"start":{"row":144,"column":17},"end":{"row":144,"column":18},"action":"insert","lines":["i"]},{"start":{"row":144,"column":18},"end":{"row":144,"column":19},"action":"insert","lines":["f"]},{"start":{"row":144,"column":19},"end":{"row":144,"column":20},"action":"insert","lines":[":"]}],[{"start":{"row":144,"column":20},"end":{"row":145,"column":0},"action":"insert","lines":["",""],"id":6180},{"start":{"row":145,"column":0},"end":{"row":145,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":145,"column":16},"end":{"row":145,"column":17},"action":"insert","lines":["r"],"id":6181},{"start":{"row":145,"column":17},"end":{"row":145,"column":18},"action":"insert","lines":["e"]},{"start":{"row":145,"column":18},"end":{"row":145,"column":19},"action":"insert","lines":["c"]},{"start":{"row":145,"column":19},"end":{"row":145,"column":20},"action":"insert","lines":["i"]},{"start":{"row":145,"column":20},"end":{"row":145,"column":21},"action":"insert","lines":["p"]},{"start":{"row":145,"column":21},"end":{"row":145,"column":22},"action":"insert","lines":["e"]},{"start":{"row":145,"column":22},"end":{"row":145,"column":23},"action":"insert","lines":["_"]},{"start":{"row":145,"column":23},"end":{"row":145,"column":24},"action":"insert","lines":["u"]},{"start":{"row":145,"column":24},"end":{"row":145,"column":25},"action":"insert","lines":["r"]}],[{"start":{"row":145,"column":25},"end":{"row":145,"column":26},"action":"insert","lines":["l"],"id":6182},{"start":{"row":145,"column":26},"end":{"row":145,"column":27},"action":"insert","lines":[","]}],[{"start":{"row":145,"column":26},"end":{"row":145,"column":27},"action":"remove","lines":[","],"id":6183}],[{"start":{"row":145,"column":26},"end":{"row":145,"column":27},"action":"insert","lines":["."],"id":6184}],[{"start":{"row":145,"column":27},"end":{"row":145,"column":28},"action":"insert","lines":["v"],"id":6185},{"start":{"row":145,"column":28},"end":{"row":145,"column":29},"action":"insert","lines":["a"]},{"start":{"row":145,"column":29},"end":{"row":145,"column":30},"action":"insert","lines":["l"]},{"start":{"row":145,"column":30},"end":{"row":145,"column":31},"action":"insert","lines":["i"]},{"start":{"row":145,"column":31},"end":{"row":145,"column":32},"action":"insert","lines":["d"]},{"start":{"row":145,"column":32},"end":{"row":145,"column":33},"action":"insert","lines":["a"]},{"start":{"row":145,"column":33},"end":{"row":145,"column":34},"action":"insert","lines":["t"]},{"start":{"row":145,"column":34},"end":{"row":145,"column":35},"action":"insert","lines":["e"]}],[{"start":{"row":144,"column":16},"end":{"row":144,"column":17},"action":"remove","lines":[" "],"id":6186},{"start":{"row":144,"column":15},"end":{"row":144,"column":16},"action":"remove","lines":["e"]},{"start":{"row":144,"column":14},"end":{"row":144,"column":15},"action":"remove","lines":["s"]}],[{"start":{"row":144,"column":12},"end":{"row":144,"column":14},"action":"insert","lines":["# "],"id":6187},{"start":{"row":145,"column":12},"end":{"row":145,"column":14},"action":"insert","lines":["# "]}],[{"start":{"row":156,"column":41},"end":{"row":156,"column":42},"action":"remove","lines":["e"],"id":6188},{"start":{"row":156,"column":40},"end":{"row":156,"column":41},"action":"remove","lines":["g"]},{"start":{"row":156,"column":39},"end":{"row":156,"column":40},"action":"remove","lines":["a"]},{"start":{"row":156,"column":38},"end":{"row":156,"column":39},"action":"remove","lines":["m"]},{"start":{"row":156,"column":37},"end":{"row":156,"column":38},"action":"remove","lines":["i"]}],[{"start":{"row":156,"column":37},"end":{"row":156,"column":38},"action":"insert","lines":["U"],"id":6189},{"start":{"row":156,"column":38},"end":{"row":156,"column":39},"action":"insert","lines":["R"]},{"start":{"row":156,"column":39},"end":{"row":156,"column":40},"action":"insert","lines":["L"]}],[{"start":{"row":156,"column":39},"end":{"row":156,"column":40},"action":"remove","lines":["L"],"id":6190},{"start":{"row":156,"column":38},"end":{"row":156,"column":39},"action":"remove","lines":["R"]},{"start":{"row":156,"column":37},"end":{"row":156,"column":38},"action":"remove","lines":["U"]}],[{"start":{"row":156,"column":37},"end":{"row":156,"column":38},"action":"insert","lines":["u"],"id":6191},{"start":{"row":156,"column":38},"end":{"row":156,"column":39},"action":"insert","lines":["r"]},{"start":{"row":156,"column":39},"end":{"row":156,"column":40},"action":"insert","lines":["l"]}],[{"start":{"row":144,"column":11},"end":{"row":145,"column":37},"action":"remove","lines":[" # elif:","            #     recipe_url.validate"],"id":6192},{"start":{"row":144,"column":11},"end":{"row":144,"column":12},"action":"insert","lines":["\\"]},{"start":{"row":144,"column":12},"end":{"row":144,"column":13},"action":"insert","lines":["\\"]},{"start":{"row":144,"column":13},"end":{"row":144,"column":14},"action":"insert","lines":["\\"]}],[{"start":{"row":144,"column":13},"end":{"row":144,"column":14},"action":"remove","lines":["\\"],"id":6193},{"start":{"row":144,"column":12},"end":{"row":144,"column":13},"action":"remove","lines":["\\"]},{"start":{"row":144,"column":11},"end":{"row":144,"column":12},"action":"remove","lines":["\\"]},{"start":{"row":144,"column":10},"end":{"row":144,"column":11},"action":"remove","lines":[" "]},{"start":{"row":144,"column":9},"end":{"row":144,"column":10},"action":"remove","lines":[" "]},{"start":{"row":144,"column":8},"end":{"row":144,"column":9},"action":"remove","lines":[" "]},{"start":{"row":144,"column":4},"end":{"row":144,"column":8},"action":"remove","lines":["    "]},{"start":{"row":144,"column":0},"end":{"row":144,"column":4},"action":"remove","lines":["    "]},{"start":{"row":143,"column":42},"end":{"row":144,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":2222.5,"scrollleft":0,"selection":{"start":{"row":144,"column":17},"end":{"row":144,"column":17},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1570350146787}