{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":168,"column":0},"end":{"row":168,"column":4},"action":"remove","lines":["    "],"id":6102},{"start":{"row":169,"column":0},"end":{"row":169,"column":4},"action":"remove","lines":["    "]},{"start":{"row":170,"column":0},"end":{"row":170,"column":4},"action":"remove","lines":["    "]},{"start":{"row":171,"column":0},"end":{"row":171,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":168,"column":0},"end":{"row":168,"column":4},"action":"remove","lines":["    "],"id":6103},{"start":{"row":169,"column":0},"end":{"row":169,"column":4},"action":"remove","lines":["    "]},{"start":{"row":170,"column":0},"end":{"row":170,"column":4},"action":"remove","lines":["    "]},{"start":{"row":171,"column":0},"end":{"row":171,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":168,"column":0},"end":{"row":168,"column":4},"action":"remove","lines":["    "],"id":6104},{"start":{"row":169,"column":0},"end":{"row":169,"column":4},"action":"remove","lines":["    "]},{"start":{"row":170,"column":0},"end":{"row":170,"column":4},"action":"remove","lines":["    "]},{"start":{"row":171,"column":0},"end":{"row":171,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":171,"column":43},"end":{"row":171,"column":53},"action":"remove","lines":[" (edited) "],"id":6105}],[{"start":{"row":171,"column":43},"end":{"row":171,"column":44},"action":"insert","lines":["_"],"id":6106},{"start":{"row":171,"column":44},"end":{"row":171,"column":45},"action":"insert","lines":["u"]},{"start":{"row":171,"column":45},"end":{"row":171,"column":46},"action":"insert","lines":["r"]},{"start":{"row":171,"column":46},"end":{"row":171,"column":47},"action":"insert","lines":["l"]}],[{"start":{"row":156,"column":55},"end":{"row":156,"column":66},"action":"remove","lines":["edited_data"],"id":6107},{"start":{"row":156,"column":55},"end":{"row":156,"column":56},"action":"insert","lines":["r"]},{"start":{"row":156,"column":56},"end":{"row":156,"column":57},"action":"insert","lines":["e"]},{"start":{"row":156,"column":57},"end":{"row":156,"column":58},"action":"insert","lines":["q"]},{"start":{"row":156,"column":58},"end":{"row":156,"column":59},"action":"insert","lines":["u"]},{"start":{"row":156,"column":59},"end":{"row":156,"column":60},"action":"insert","lines":["e"]},{"start":{"row":156,"column":60},"end":{"row":156,"column":61},"action":"insert","lines":["s"]},{"start":{"row":156,"column":61},"end":{"row":156,"column":62},"action":"insert","lines":["t"]},{"start":{"row":156,"column":62},"end":{"row":156,"column":63},"action":"insert","lines":["."]}],[{"start":{"row":156,"column":63},"end":{"row":156,"column":64},"action":"insert","lines":["f"],"id":6108},{"start":{"row":156,"column":64},"end":{"row":156,"column":65},"action":"insert","lines":["o"]},{"start":{"row":156,"column":65},"end":{"row":156,"column":66},"action":"insert","lines":["r"]},{"start":{"row":156,"column":66},"end":{"row":156,"column":67},"action":"insert","lines":["m"]}],[{"start":{"row":156,"column":75},"end":{"row":156,"column":76},"action":"remove","lines":["_"],"id":6109}],[{"start":{"row":156,"column":75},"end":{"row":156,"column":76},"action":"insert","lines":["_"],"id":6110}],[{"start":{"row":156,"column":76},"end":{"row":156,"column":81},"action":"remove","lines":["image"],"id":6111},{"start":{"row":156,"column":76},"end":{"row":156,"column":77},"action":"insert","lines":["u"]},{"start":{"row":156,"column":77},"end":{"row":156,"column":78},"action":"insert","lines":["r"]},{"start":{"row":156,"column":78},"end":{"row":156,"column":79},"action":"insert","lines":["l"]}],[{"start":{"row":158,"column":72},"end":{"row":158,"column":73},"action":"insert","lines":["_"],"id":6112},{"start":{"row":158,"column":73},"end":{"row":158,"column":74},"action":"insert","lines":["u"]},{"start":{"row":158,"column":74},"end":{"row":158,"column":75},"action":"insert","lines":["r"]},{"start":{"row":158,"column":75},"end":{"row":158,"column":76},"action":"insert","lines":["l"]}],[{"start":{"row":160,"column":47},"end":{"row":165,"column":56},"action":"remove","lines":[" if not test_image:","                                                   #if user hasn't added to image field,","                                                   #no image will display from templates,","                                                   #images are ignored with empty strings","                                                   recipe_image = edited_data[\"recipe_image\"]","                                                   else:"],"id":6113},{"start":{"row":160,"column":46},"end":{"row":160,"column":47},"action":"remove","lines":[" "]},{"start":{"row":160,"column":45},"end":{"row":160,"column":46},"action":"remove","lines":[" "]},{"start":{"row":160,"column":44},"end":{"row":160,"column":45},"action":"remove","lines":[" "]},{"start":{"row":160,"column":40},"end":{"row":160,"column":44},"action":"remove","lines":["    "]},{"start":{"row":160,"column":36},"end":{"row":160,"column":40},"action":"remove","lines":["    "]},{"start":{"row":160,"column":32},"end":{"row":160,"column":36},"action":"remove","lines":["    "]},{"start":{"row":160,"column":28},"end":{"row":160,"column":32},"action":"remove","lines":["    "]},{"start":{"row":160,"column":24},"end":{"row":160,"column":28},"action":"remove","lines":["    "]},{"start":{"row":160,"column":20},"end":{"row":160,"column":24},"action":"remove","lines":["    "]},{"start":{"row":160,"column":16},"end":{"row":160,"column":20},"action":"remove","lines":["    "]},{"start":{"row":160,"column":12},"end":{"row":160,"column":16},"action":"remove","lines":["    "]}],[{"start":{"row":160,"column":8},"end":{"row":160,"column":12},"action":"remove","lines":["    "],"id":6114},{"start":{"row":160,"column":4},"end":{"row":160,"column":8},"action":"remove","lines":["    "]},{"start":{"row":160,"column":0},"end":{"row":160,"column":4},"action":"remove","lines":["    "]},{"start":{"row":159,"column":49},"end":{"row":160,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":160,"column":0},"end":{"row":160,"column":4},"action":"remove","lines":["    "],"id":6115},{"start":{"row":161,"column":0},"end":{"row":161,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":160,"column":0},"end":{"row":160,"column":4},"action":"remove","lines":["    "],"id":6116},{"start":{"row":161,"column":0},"end":{"row":161,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":168,"column":12},"end":{"row":168,"column":58},"action":"remove","lines":["default_img_url = '/static/images/default.png'"],"id":6117},{"start":{"row":168,"column":8},"end":{"row":168,"column":12},"action":"remove","lines":["    "]},{"start":{"row":168,"column":4},"end":{"row":168,"column":8},"action":"remove","lines":["    "]},{"start":{"row":168,"column":0},"end":{"row":168,"column":4},"action":"remove","lines":["    "]},{"start":{"row":167,"column":12},"end":{"row":168,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":168,"column":12},"end":{"row":168,"column":13},"action":"insert","lines":["/"],"id":6118},{"start":{"row":168,"column":13},"end":{"row":168,"column":14},"action":"insert","lines":["/"]}],[{"start":{"row":168,"column":13},"end":{"row":168,"column":14},"action":"remove","lines":["/"],"id":6119},{"start":{"row":168,"column":12},"end":{"row":168,"column":13},"action":"remove","lines":["/"]}],[{"start":{"row":168,"column":12},"end":{"row":168,"column":13},"action":"insert","lines":["#"],"id":6120}],[{"start":{"row":181,"column":39},"end":{"row":181,"column":40},"action":"remove","lines":["l"],"id":6121},{"start":{"row":181,"column":38},"end":{"row":181,"column":39},"action":"remove","lines":["r"]},{"start":{"row":181,"column":37},"end":{"row":181,"column":38},"action":"remove","lines":["u"]}],[{"start":{"row":181,"column":37},"end":{"row":181,"column":38},"action":"insert","lines":["i"],"id":6122},{"start":{"row":181,"column":38},"end":{"row":181,"column":39},"action":"insert","lines":["m"]},{"start":{"row":181,"column":39},"end":{"row":181,"column":40},"action":"insert","lines":["a"]},{"start":{"row":181,"column":40},"end":{"row":181,"column":41},"action":"insert","lines":["g"]},{"start":{"row":181,"column":41},"end":{"row":181,"column":42},"action":"insert","lines":["e"]}],[{"start":{"row":168,"column":12},"end":{"row":168,"column":14},"action":"insert","lines":["# "],"id":6123},{"start":{"row":169,"column":12},"end":{"row":169,"column":14},"action":"insert","lines":["# "]},{"start":{"row":170,"column":12},"end":{"row":170,"column":14},"action":"insert","lines":["# "]},{"start":{"row":171,"column":12},"end":{"row":171,"column":14},"action":"insert","lines":["# "]},{"start":{"row":172,"column":12},"end":{"row":172,"column":14},"action":"insert","lines":["# "]}],[{"start":{"row":144,"column":16},"end":{"row":144,"column":20},"action":"remove","lines":["    "],"id":6124}],[{"start":{"row":145,"column":0},"end":{"row":145,"column":4},"action":"remove","lines":["    "],"id":6125},{"start":{"row":146,"column":0},"end":{"row":146,"column":4},"action":"remove","lines":["    "]},{"start":{"row":147,"column":0},"end":{"row":147,"column":4},"action":"remove","lines":["    "]},{"start":{"row":148,"column":0},"end":{"row":148,"column":4},"action":"remove","lines":["    "]},{"start":{"row":149,"column":0},"end":{"row":149,"column":4},"action":"remove","lines":["    "]},{"start":{"row":150,"column":0},"end":{"row":150,"column":4},"action":"remove","lines":["    "]},{"start":{"row":151,"column":0},"end":{"row":151,"column":4},"action":"remove","lines":["    "]},{"start":{"row":152,"column":0},"end":{"row":152,"column":4},"action":"remove","lines":["    "]},{"start":{"row":153,"column":0},"end":{"row":153,"column":4},"action":"remove","lines":["    "]},{"start":{"row":154,"column":0},"end":{"row":154,"column":4},"action":"remove","lines":["    "]},{"start":{"row":155,"column":0},"end":{"row":155,"column":4},"action":"remove","lines":["    "]},{"start":{"row":156,"column":0},"end":{"row":156,"column":4},"action":"remove","lines":["    "]},{"start":{"row":157,"column":0},"end":{"row":157,"column":4},"action":"remove","lines":["    "]},{"start":{"row":158,"column":0},"end":{"row":158,"column":4},"action":"remove","lines":["    "]},{"start":{"row":159,"column":0},"end":{"row":159,"column":4},"action":"remove","lines":["    "]},{"start":{"row":160,"column":0},"end":{"row":160,"column":4},"action":"remove","lines":["    "]},{"start":{"row":161,"column":0},"end":{"row":161,"column":4},"action":"remove","lines":["    "]},{"start":{"row":162,"column":0},"end":{"row":162,"column":4},"action":"remove","lines":["    "]},{"start":{"row":163,"column":0},"end":{"row":163,"column":4},"action":"remove","lines":["    "]},{"start":{"row":164,"column":0},"end":{"row":164,"column":4},"action":"remove","lines":["    "]},{"start":{"row":165,"column":0},"end":{"row":165,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":143,"column":12},"end":{"row":143,"column":16},"action":"remove","lines":["    "],"id":6126}],[{"start":{"row":144,"column":12},"end":{"row":144,"column":16},"action":"remove","lines":["    "],"id":6127},{"start":{"row":144,"column":8},"end":{"row":144,"column":12},"action":"remove","lines":["    "]},{"start":{"row":144,"column":4},"end":{"row":144,"column":8},"action":"remove","lines":["    "]},{"start":{"row":144,"column":0},"end":{"row":144,"column":4},"action":"remove","lines":["    "]},{"start":{"row":143,"column":51},"end":{"row":144,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":143,"column":51},"end":{"row":144,"column":0},"action":"insert","lines":["",""],"id":6128},{"start":{"row":144,"column":0},"end":{"row":144,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":146,"column":0},"end":{"row":146,"column":4},"action":"remove","lines":["    "],"id":6129},{"start":{"row":147,"column":0},"end":{"row":147,"column":4},"action":"remove","lines":["    "]},{"start":{"row":148,"column":0},"end":{"row":148,"column":4},"action":"remove","lines":["    "]},{"start":{"row":149,"column":0},"end":{"row":149,"column":4},"action":"remove","lines":["    "]},{"start":{"row":150,"column":0},"end":{"row":150,"column":4},"action":"remove","lines":["    "]},{"start":{"row":151,"column":0},"end":{"row":151,"column":4},"action":"remove","lines":["    "]},{"start":{"row":152,"column":0},"end":{"row":152,"column":4},"action":"remove","lines":["    "]},{"start":{"row":153,"column":0},"end":{"row":153,"column":4},"action":"remove","lines":["    "]},{"start":{"row":154,"column":0},"end":{"row":154,"column":4},"action":"remove","lines":["    "]},{"start":{"row":155,"column":0},"end":{"row":155,"column":4},"action":"remove","lines":["    "]},{"start":{"row":156,"column":0},"end":{"row":156,"column":4},"action":"remove","lines":["    "]},{"start":{"row":157,"column":0},"end":{"row":157,"column":4},"action":"remove","lines":["    "]},{"start":{"row":158,"column":0},"end":{"row":158,"column":4},"action":"remove","lines":["    "]},{"start":{"row":159,"column":0},"end":{"row":159,"column":4},"action":"remove","lines":["    "]},{"start":{"row":160,"column":0},"end":{"row":160,"column":4},"action":"remove","lines":["    "]},{"start":{"row":161,"column":0},"end":{"row":161,"column":4},"action":"remove","lines":["    "]},{"start":{"row":162,"column":0},"end":{"row":162,"column":4},"action":"remove","lines":["    "]},{"start":{"row":163,"column":0},"end":{"row":163,"column":4},"action":"remove","lines":["    "]},{"start":{"row":164,"column":0},"end":{"row":164,"column":4},"action":"remove","lines":["    "]},{"start":{"row":165,"column":0},"end":{"row":165,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":162,"column":0},"end":{"row":162,"column":4},"action":"insert","lines":["    "],"id":6130},{"start":{"row":163,"column":0},"end":{"row":163,"column":4},"action":"insert","lines":["    "]},{"start":{"row":164,"column":0},"end":{"row":164,"column":4},"action":"insert","lines":["    "]},{"start":{"row":165,"column":0},"end":{"row":165,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":162,"column":0},"end":{"row":162,"column":4},"action":"insert","lines":["    "],"id":6131},{"start":{"row":163,"column":0},"end":{"row":163,"column":4},"action":"insert","lines":["    "]},{"start":{"row":164,"column":0},"end":{"row":164,"column":4},"action":"insert","lines":["    "]},{"start":{"row":165,"column":0},"end":{"row":165,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":162,"column":10},"end":{"row":162,"column":11},"action":"insert","lines":[" "],"id":6133}],[{"start":{"row":143,"column":12},"end":{"row":143,"column":16},"action":"insert","lines":["    "],"id":6134}],[{"start":{"row":142,"column":11},"end":{"row":142,"column":30},"action":"remove","lines":[" #tests image first"],"id":6135},{"start":{"row":142,"column":10},"end":{"row":142,"column":11},"action":"remove","lines":[" "]},{"start":{"row":142,"column":9},"end":{"row":142,"column":10},"action":"remove","lines":[" "]},{"start":{"row":142,"column":8},"end":{"row":142,"column":9},"action":"remove","lines":[" "]},{"start":{"row":142,"column":4},"end":{"row":142,"column":8},"action":"remove","lines":["    "]},{"start":{"row":142,"column":0},"end":{"row":142,"column":4},"action":"remove","lines":["    "]},{"start":{"row":141,"column":16},"end":{"row":142,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":142,"column":12},"end":{"row":142,"column":16},"action":"remove","lines":["    "],"id":6136},{"start":{"row":142,"column":8},"end":{"row":142,"column":12},"action":"remove","lines":["    "]},{"start":{"row":142,"column":4},"end":{"row":142,"column":8},"action":"remove","lines":["    "]},{"start":{"row":142,"column":0},"end":{"row":142,"column":4},"action":"remove","lines":["    "]},{"start":{"row":141,"column":16},"end":{"row":142,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":141,"column":16},"end":{"row":142,"column":0},"action":"insert","lines":["",""],"id":6137},{"start":{"row":142,"column":0},"end":{"row":142,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":143,"column":8},"end":{"row":143,"column":12},"action":"remove","lines":["    "],"id":6138},{"start":{"row":143,"column":4},"end":{"row":143,"column":8},"action":"remove","lines":["    "]},{"start":{"row":143,"column":0},"end":{"row":143,"column":4},"action":"remove","lines":["    "]},{"start":{"row":142,"column":55},"end":{"row":143,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":142,"column":55},"end":{"row":143,"column":0},"action":"insert","lines":["",""],"id":6139},{"start":{"row":143,"column":0},"end":{"row":143,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":144,"column":16},"end":{"row":144,"column":39},"action":"remove","lines":["#data urls are excluded"],"id":6140},{"start":{"row":144,"column":12},"end":{"row":144,"column":16},"action":"remove","lines":["    "]},{"start":{"row":144,"column":8},"end":{"row":144,"column":12},"action":"remove","lines":["    "]},{"start":{"row":144,"column":4},"end":{"row":144,"column":8},"action":"remove","lines":["    "]},{"start":{"row":144,"column":0},"end":{"row":144,"column":4},"action":"remove","lines":["    "]},{"start":{"row":143,"column":48},"end":{"row":144,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":144,"column":12},"end":{"row":144,"column":16},"action":"remove","lines":["    "],"id":6141},{"start":{"row":144,"column":8},"end":{"row":144,"column":12},"action":"remove","lines":["    "]},{"start":{"row":144,"column":4},"end":{"row":144,"column":8},"action":"remove","lines":["    "]},{"start":{"row":144,"column":0},"end":{"row":144,"column":4},"action":"remove","lines":["    "]},{"start":{"row":143,"column":48},"end":{"row":144,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":143,"column":48},"end":{"row":144,"column":0},"action":"insert","lines":["",""],"id":6142},{"start":{"row":144,"column":0},"end":{"row":144,"column":20},"action":"insert","lines":["                    "]}],[{"start":{"row":145,"column":16},"end":{"row":145,"column":20},"action":"remove","lines":["    "],"id":6143},{"start":{"row":145,"column":12},"end":{"row":145,"column":16},"action":"remove","lines":["    "]},{"start":{"row":145,"column":8},"end":{"row":145,"column":12},"action":"remove","lines":["    "]},{"start":{"row":145,"column":4},"end":{"row":145,"column":8},"action":"remove","lines":["    "]},{"start":{"row":145,"column":0},"end":{"row":145,"column":4},"action":"remove","lines":["    "]},{"start":{"row":144,"column":62},"end":{"row":145,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":144,"column":62},"end":{"row":145,"column":0},"action":"insert","lines":["",""],"id":6144},{"start":{"row":145,"column":0},"end":{"row":145,"column":24},"action":"insert","lines":["                        "]}],[{"start":{"row":146,"column":16},"end":{"row":146,"column":20},"action":"remove","lines":["    "],"id":6145},{"start":{"row":146,"column":12},"end":{"row":146,"column":16},"action":"remove","lines":["    "]},{"start":{"row":146,"column":8},"end":{"row":146,"column":12},"action":"remove","lines":["    "]},{"start":{"row":146,"column":4},"end":{"row":146,"column":8},"action":"remove","lines":["    "]},{"start":{"row":146,"column":0},"end":{"row":146,"column":4},"action":"remove","lines":["    "]},{"start":{"row":145,"column":56},"end":{"row":146,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":145,"column":56},"end":{"row":146,"column":0},"action":"insert","lines":["",""],"id":6146},{"start":{"row":146,"column":0},"end":{"row":146,"column":24},"action":"insert","lines":["                        "]}],[{"start":{"row":146,"column":20},"end":{"row":146,"column":24},"action":"remove","lines":["    "],"id":6147}],[{"start":{"row":147,"column":0},"end":{"row":147,"column":39},"action":"remove","lines":["                    #prevents 403 error"],"id":6148},{"start":{"row":146,"column":25},"end":{"row":147,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":147,"column":20},"end":{"row":147,"column":24},"action":"remove","lines":["    "],"id":6149},{"start":{"row":147,"column":16},"end":{"row":147,"column":20},"action":"remove","lines":["    "]},{"start":{"row":147,"column":12},"end":{"row":147,"column":16},"action":"remove","lines":["    "]},{"start":{"row":147,"column":8},"end":{"row":147,"column":12},"action":"remove","lines":["    "]},{"start":{"row":147,"column":4},"end":{"row":147,"column":8},"action":"remove","lines":["    "]},{"start":{"row":147,"column":0},"end":{"row":147,"column":4},"action":"remove","lines":["    "]},{"start":{"row":146,"column":25},"end":{"row":147,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":146,"column":25},"end":{"row":147,"column":0},"action":"insert","lines":["",""],"id":6150},{"start":{"row":147,"column":0},"end":{"row":147,"column":24},"action":"insert","lines":["                        "]}],[{"start":{"row":154,"column":28},"end":{"row":154,"column":32},"action":"remove","lines":["    "],"id":6151}],[{"start":{"row":155,"column":32},"end":{"row":155,"column":36},"action":"remove","lines":["    "],"id":6152}],[{"start":{"row":156,"column":32},"end":{"row":156,"column":36},"action":"remove","lines":["    "],"id":6153},{"start":{"row":156,"column":28},"end":{"row":156,"column":32},"action":"remove","lines":["    "]}],[{"start":{"row":156,"column":24},"end":{"row":156,"column":28},"action":"remove","lines":["    "],"id":6154},{"start":{"row":156,"column":20},"end":{"row":156,"column":24},"action":"remove","lines":["    "]},{"start":{"row":156,"column":16},"end":{"row":156,"column":20},"action":"remove","lines":["    "]}],[{"start":{"row":157,"column":32},"end":{"row":157,"column":36},"action":"remove","lines":["    "],"id":6155},{"start":{"row":157,"column":28},"end":{"row":157,"column":32},"action":"remove","lines":["    "]},{"start":{"row":157,"column":24},"end":{"row":157,"column":28},"action":"remove","lines":["    "]},{"start":{"row":157,"column":20},"end":{"row":157,"column":24},"action":"remove","lines":["    "]},{"start":{"row":157,"column":16},"end":{"row":157,"column":20},"action":"remove","lines":["    "]}],[{"start":{"row":158,"column":36},"end":{"row":158,"column":40},"action":"remove","lines":["    "],"id":6156},{"start":{"row":158,"column":32},"end":{"row":158,"column":36},"action":"remove","lines":["    "]},{"start":{"row":158,"column":28},"end":{"row":158,"column":32},"action":"remove","lines":["    "]},{"start":{"row":158,"column":24},"end":{"row":158,"column":28},"action":"remove","lines":["    "]},{"start":{"row":158,"column":20},"end":{"row":158,"column":24},"action":"remove","lines":["    "]}],[{"start":{"row":131,"column":0},"end":{"row":183,"column":43},"action":"remove","lines":["def submit_recipe():","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        new_recipe = None","        form = AddRecipeForm(request.form)","        recipes = mongo.db.recipes","        form_normal = request.form.to_dict()","        flat_form = request.form.to_dict(flat=False)","        if request.method == 'POST':","            default_img_url = '/static/images/default.png'","            try:","                test_image = request.form['recipe_url']","                if url_parse(test_image).scheme:","                    if url_parse(test_image).scheme == 'data':","                        recipe_image = default_image_url","                    else:","                        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.3'}","                        url_request = urllib.request.Request(test_image, headers = headers)","                        test = urllib.request.urlopen(url_request)","                        #gets url type","                        url_type = test.info()['Content-type']","                            if url_type.endswith(\"png\") or url_type.endswith(\"jpeg\") or url_type.endswith(\"gif\"):","                                recipe_image = request.form[\"recipe_url\"]","                            else:","                                recipe_image = default_image_url","                else:","                #if user created a faulty url, default image is used","                    recipe_image = default_image","            except Exception as e:","               #inform them that a general error has occurred","               pass","               recipe_image = default_image_url","            ","            ","            # #input_img_url = request.form['recipe_url']","            # if input_img_url != '' and input_img_url.lower().endswith(('.png', '.jpg', '.jpeg', '.tiff', '.bmp', '.gif')):","            #     recipe_url = input_img_url","            # else:","            #     recipe_url = default_img_url","            new_recipe = recipes.insert_one({","                'recipe_title': form_normal['recipe_title'],","                'sub_title': form_normal['sub_title'],","                'makes': form_normal['makes'],","                'takes': form_normal['takes'],","                'ingredients': flat_form['ingredients'],","                'method': flat_form['method'],","                'created_by': session['username'],","                'recipe_url': recipe_image","                })","            return redirect(url_for('recipe_card',","                            recipe_id=new_recipe.inserted_id))","        return render_template('submitrecipe.html', form=form)","    return render_template('404error.html')"],"id":6157},{"start":{"row":131,"column":0},"end":{"row":183,"column":43},"action":"insert","lines":["def submit_recipe():","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        new_recipe = None","        form = AddRecipeForm(request.form)","        recipes = mongo.db.recipes","        form_normal = request.form.to_dict()","        flat_form = request.form.to_dict(flat=False)","        if request.method == 'POST':","            default_img_url = '/static/images/default.png'","            try:","                test_image = request.form['recipe_url']","                if url_parse(test_image).scheme:","                    if url_parse(test_image).scheme == 'data':","                        recipe_image = default_image_url","                    else:","                        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.3'}","                        url_request = urllib.request.Request(test_image, headers = headers)","                        test = urllib.request.urlopen(url_request)","                        #gets url type","                        url_type = test.info()['Content-type']","                            if url_type.endswith(\"png\") or url_type.endswith(\"jpeg\") or url_type.endswith(\"gif\"):","                                recipe_image = request.form[\"recipe_url\"]","                            else:","                                recipe_image = default_image_url","                else:","                #if user created a faulty url, default image is used","                    recipe_image = default_image","            except Exception as e:","               #inform them that a general error has occurred","               pass","               recipe_image = default_image_url","            ","            ","            # #input_img_url = request.form['recipe_url']","            # if input_img_url != '' and input_img_url.lower().endswith(('.png', '.jpg', '.jpeg', '.tiff', '.bmp', '.gif')):","            #     recipe_url = input_img_url","            # else:","            #     recipe_url = default_img_url","            new_recipe = recipes.insert_one({","                'recipe_title': form_normal['recipe_title'],","                'sub_title': form_normal['sub_title'],","                'makes': form_normal['makes'],","                'takes': form_normal['takes'],","                'ingredients': flat_form['ingredients'],","                'method': flat_form['method'],","                'created_by': session['username'],","                'recipe_url': recipe_image","                })","            return redirect(url_for('recipe_card',","                            recipe_id=new_recipe.inserted_id))","        return render_template('submitrecipe.html', form=form)","    return render_template('404error.html')"]}],[{"start":{"row":152,"column":24},"end":{"row":152,"column":28},"action":"remove","lines":["    "],"id":6158}],[{"start":{"row":154,"column":24},"end":{"row":154,"column":28},"action":"remove","lines":["    "],"id":6159}],[{"start":{"row":155,"column":28},"end":{"row":155,"column":32},"action":"remove","lines":["    "],"id":6160}],[{"start":{"row":152,"column":20},"end":{"row":152,"column":24},"action":"remove","lines":["    "],"id":6161}],[{"start":{"row":154,"column":20},"end":{"row":154,"column":24},"action":"remove","lines":["    "],"id":6162}],[{"start":{"row":153,"column":28},"end":{"row":153,"column":32},"action":"remove","lines":["    "],"id":6163},{"start":{"row":153,"column":24},"end":{"row":153,"column":28},"action":"remove","lines":["    "]}],[{"start":{"row":155,"column":24},"end":{"row":155,"column":28},"action":"remove","lines":["    "],"id":6164}],[{"start":{"row":141,"column":12},"end":{"row":165,"column":15},"action":"remove","lines":["try:","                test_image = request.form['recipe_url']","                if url_parse(test_image).scheme:","                    if url_parse(test_image).scheme == 'data':","                        recipe_image = default_image_url","                    else:","                        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.3'}","                        url_request = urllib.request.Request(test_image, headers = headers)","                        test = urllib.request.urlopen(url_request)","                        #gets url type","                        url_type = test.info()['Content-type']","                    if url_type.endswith(\"png\") or url_type.endswith(\"jpeg\") or url_type.endswith(\"gif\"):","                        recipe_image = request.form[\"recipe_url\"]","                    else:","                        recipe_image = default_image_url","                else:","                #if user created a faulty url, default image is used","                    recipe_image = default_image","            except Exception as e:","               #inform them that a general error has occurred","               pass","               recipe_image = default_image_url","            ","            ","            # #"],"id":6165,"ignore":true},{"start":{"row":142,"column":11},"end":{"row":142,"column":13},"action":"remove","lines":[" #"]},{"start":{"row":142,"column":94},"end":{"row":142,"column":119},"action":"remove","lines":[", '.tiff', '.bmp', '.gif'"]},{"start":{"row":143,"column":11},"end":{"row":143,"column":13},"action":"remove","lines":[" #"]},{"start":{"row":144,"column":11},"end":{"row":144,"column":13},"action":"remove","lines":[" #"]},{"start":{"row":145,"column":11},"end":{"row":145,"column":13},"action":"remove","lines":[" #"]},{"start":{"row":154,"column":37},"end":{"row":154,"column":42},"action":"remove","lines":["image"]},{"start":{"row":154,"column":37},"end":{"row":154,"column":40},"action":"insert","lines":["url"]},{"start":{"row":183,"column":0},"end":{"row":184,"column":0},"action":"remove","lines":["        ",""]},{"start":{"row":184,"column":0},"end":{"row":190,"column":0},"action":"insert","lines":["                default_img_url = '/static/images/default.png'","                input_img_url = request.form['recipe_url']","                if input_img_url != '' and input_img_url.lower().endswith(('.png', '.jpg', '.jpeg')):","                    recipe_url = input_img_url","                else:","                    recipe_url = default_img_url",""]},{"start":{"row":200,"column":34},"end":{"row":200,"column":47},"action":"remove","lines":["form_normal['"]},{"start":{"row":200,"column":44},"end":{"row":200,"column":46},"action":"remove","lines":["']"]}],[{"start":{"row":76,"column":77},"end":{"row":76,"column":78},"action":"remove","lines":["'"],"id":6170},{"start":{"row":76,"column":76},"end":{"row":76,"column":77},"action":"remove","lines":["'"]}],[{"start":{"row":76,"column":76},"end":{"row":76,"column":78},"action":"insert","lines":["[]"],"id":6171}],[{"start":{"row":124,"column":0},"end":{"row":124,"column":37},"action":"remove","lines":["        saved = user['saved_recipes']"],"id":6172},{"start":{"row":123,"column":115},"end":{"row":124,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":124,"column":44},"end":{"row":125,"column":81},"action":"remove","lines":[".html',","                           recipes=mongo.db.recipes.find({'_id': {\"$in\": saved}})"],"id":6173},{"start":{"row":124,"column":44},"end":{"row":124,"column":45},"action":"insert","lines":["'"]}],[{"start":{"row":124,"column":16},"end":{"row":124,"column":30},"action":"remove","lines":["ender_template"],"id":6174},{"start":{"row":124,"column":16},"end":{"row":124,"column":17},"action":"insert","lines":["e"]},{"start":{"row":124,"column":17},"end":{"row":124,"column":18},"action":"insert","lines":["d"]},{"start":{"row":124,"column":18},"end":{"row":124,"column":19},"action":"insert","lines":["i"]},{"start":{"row":124,"column":19},"end":{"row":124,"column":20},"action":"insert","lines":["r"]},{"start":{"row":124,"column":20},"end":{"row":124,"column":21},"action":"insert","lines":["e"]},{"start":{"row":124,"column":21},"end":{"row":124,"column":22},"action":"insert","lines":["c"]},{"start":{"row":124,"column":22},"end":{"row":124,"column":23},"action":"insert","lines":["t"]}],[{"start":{"row":124,"column":24},"end":{"row":124,"column":25},"action":"insert","lines":["u"],"id":6175},{"start":{"row":124,"column":25},"end":{"row":124,"column":26},"action":"insert","lines":["r"]},{"start":{"row":124,"column":26},"end":{"row":124,"column":27},"action":"insert","lines":["l"]},{"start":{"row":124,"column":27},"end":{"row":124,"column":28},"action":"insert","lines":["_"]},{"start":{"row":124,"column":28},"end":{"row":124,"column":29},"action":"insert","lines":["f"]},{"start":{"row":124,"column":29},"end":{"row":124,"column":30},"action":"insert","lines":["o"]},{"start":{"row":124,"column":30},"end":{"row":124,"column":31},"action":"insert","lines":["r"]}],[{"start":{"row":124,"column":31},"end":{"row":124,"column":32},"action":"insert","lines":["("],"id":6176}],[{"start":{"row":124,"column":47},"end":{"row":124,"column":48},"action":"insert","lines":[")"],"id":6177}],[{"start":{"row":124,"column":38},"end":{"row":124,"column":39},"action":"insert","lines":["_"],"id":6178}],[{"start":{"row":124,"column":33},"end":{"row":124,"column":34},"action":"insert","lines":["m"],"id":6179},{"start":{"row":124,"column":34},"end":{"row":124,"column":35},"action":"insert","lines":["y"]},{"start":{"row":124,"column":35},"end":{"row":124,"column":36},"action":"insert","lines":["_"]}],[{"start":{"row":112,"column":8},"end":{"row":112,"column":10},"action":"insert","lines":["# "],"id":6180},{"start":{"row":113,"column":8},"end":{"row":113,"column":10},"action":"insert","lines":["# "]}],[{"start":{"row":112,"column":0},"end":{"row":113,"column":56},"action":"remove","lines":["        # if saved == []:","        #     flash(\"You haven't saved any recipes yet\")"],"id":6181},{"start":{"row":111,"column":37},"end":{"row":112,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":13,"column":36},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":6182},{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["",""]},{"start":{"row":15,"column":0},"end":{"row":15,"column":1},"action":"insert","lines":["c"]},{"start":{"row":15,"column":1},"end":{"row":15,"column":2},"action":"insert","lines":["o"]},{"start":{"row":15,"column":2},"end":{"row":15,"column":3},"action":"insert","lines":["l"]},{"start":{"row":15,"column":3},"end":{"row":15,"column":4},"action":"insert","lines":["l"]},{"start":{"row":15,"column":4},"end":{"row":15,"column":5},"action":"insert","lines":["e"]}],[{"start":{"row":15,"column":4},"end":{"row":15,"column":5},"action":"remove","lines":["e"],"id":6183},{"start":{"row":15,"column":3},"end":{"row":15,"column":4},"action":"remove","lines":["l"]},{"start":{"row":15,"column":2},"end":{"row":15,"column":3},"action":"remove","lines":["l"]},{"start":{"row":15,"column":1},"end":{"row":15,"column":2},"action":"remove","lines":["o"]},{"start":{"row":15,"column":0},"end":{"row":15,"column":1},"action":"remove","lines":["c"]}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":2},"action":"insert","lines":["\"\""],"id":6184}],[{"start":{"row":15,"column":2},"end":{"row":15,"column":3},"action":"insert","lines":["\""],"id":6185}],[{"start":{"row":15,"column":3},"end":{"row":15,"column":4},"action":"insert","lines":[" "],"id":6186},{"start":{"row":15,"column":4},"end":{"row":15,"column":5},"action":"insert","lines":["c"]},{"start":{"row":15,"column":5},"end":{"row":15,"column":6},"action":"insert","lines":["o"]},{"start":{"row":15,"column":6},"end":{"row":15,"column":7},"action":"insert","lines":["l"]},{"start":{"row":15,"column":7},"end":{"row":15,"column":8},"action":"insert","lines":["l"]},{"start":{"row":15,"column":8},"end":{"row":15,"column":9},"action":"insert","lines":["e"]},{"start":{"row":15,"column":9},"end":{"row":15,"column":10},"action":"insert","lines":["c"]},{"start":{"row":15,"column":10},"end":{"row":15,"column":11},"action":"insert","lines":["t"]},{"start":{"row":15,"column":11},"end":{"row":15,"column":12},"action":"insert","lines":["i"]},{"start":{"row":15,"column":12},"end":{"row":15,"column":13},"action":"insert","lines":["o"]},{"start":{"row":15,"column":13},"end":{"row":15,"column":14},"action":"insert","lines":["n"]},{"start":{"row":15,"column":14},"end":{"row":15,"column":15},"action":"insert","lines":["s"]}],[{"start":{"row":15,"column":15},"end":{"row":15,"column":16},"action":"insert","lines":[" "],"id":6187},{"start":{"row":15,"column":16},"end":{"row":15,"column":17},"action":"insert","lines":["\""]},{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"insert","lines":["\""]},{"start":{"row":15,"column":18},"end":{"row":15,"column":19},"action":"insert","lines":["\""]}],[{"start":{"row":15,"column":19},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":6188}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":1},"action":"insert","lines":["r"],"id":6189},{"start":{"row":16,"column":1},"end":{"row":16,"column":2},"action":"insert","lines":["e"]},{"start":{"row":16,"column":2},"end":{"row":16,"column":3},"action":"insert","lines":["c"]},{"start":{"row":16,"column":3},"end":{"row":16,"column":4},"action":"insert","lines":["i"]},{"start":{"row":16,"column":4},"end":{"row":16,"column":5},"action":"insert","lines":["p"]},{"start":{"row":16,"column":5},"end":{"row":16,"column":6},"action":"insert","lines":["e"]},{"start":{"row":16,"column":6},"end":{"row":16,"column":7},"action":"insert","lines":["s"]}],[{"start":{"row":16,"column":6},"end":{"row":16,"column":7},"action":"remove","lines":["s"],"id":6190}],[{"start":{"row":16,"column":6},"end":{"row":16,"column":7},"action":"insert","lines":["_"],"id":6191},{"start":{"row":16,"column":7},"end":{"row":16,"column":8},"action":"insert","lines":["c"]},{"start":{"row":16,"column":8},"end":{"row":16,"column":9},"action":"insert","lines":["o"]},{"start":{"row":16,"column":9},"end":{"row":16,"column":10},"action":"insert","lines":["l"]},{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"insert","lines":["l"]},{"start":{"row":16,"column":11},"end":{"row":16,"column":12},"action":"insert","lines":["e"]},{"start":{"row":16,"column":12},"end":{"row":16,"column":13},"action":"insert","lines":["c"]},{"start":{"row":16,"column":13},"end":{"row":16,"column":14},"action":"insert","lines":["t"]},{"start":{"row":16,"column":14},"end":{"row":16,"column":15},"action":"insert","lines":["i"]},{"start":{"row":16,"column":15},"end":{"row":16,"column":16},"action":"insert","lines":["o"]},{"start":{"row":16,"column":16},"end":{"row":16,"column":17},"action":"insert","lines":["n"]}],[{"start":{"row":16,"column":17},"end":{"row":16,"column":18},"action":"insert","lines":[" "],"id":6192},{"start":{"row":16,"column":18},"end":{"row":16,"column":19},"action":"insert","lines":["="]}],[{"start":{"row":16,"column":19},"end":{"row":16,"column":20},"action":"insert","lines":[" "],"id":6193},{"start":{"row":16,"column":20},"end":{"row":16,"column":21},"action":"insert","lines":["m"]},{"start":{"row":16,"column":21},"end":{"row":16,"column":22},"action":"insert","lines":["o"]},{"start":{"row":16,"column":22},"end":{"row":16,"column":23},"action":"insert","lines":["n"]},{"start":{"row":16,"column":23},"end":{"row":16,"column":24},"action":"insert","lines":["g"]},{"start":{"row":16,"column":24},"end":{"row":16,"column":25},"action":"insert","lines":["o"]}],[{"start":{"row":16,"column":25},"end":{"row":16,"column":26},"action":"insert","lines":["."],"id":6194},{"start":{"row":16,"column":26},"end":{"row":16,"column":27},"action":"insert","lines":["d"]},{"start":{"row":16,"column":27},"end":{"row":16,"column":28},"action":"insert","lines":["b"]},{"start":{"row":16,"column":28},"end":{"row":16,"column":29},"action":"insert","lines":["."]}],[{"start":{"row":16,"column":29},"end":{"row":16,"column":30},"action":"insert","lines":["r"],"id":6195},{"start":{"row":16,"column":30},"end":{"row":16,"column":31},"action":"insert","lines":["e"]},{"start":{"row":16,"column":31},"end":{"row":16,"column":32},"action":"insert","lines":["c"]},{"start":{"row":16,"column":32},"end":{"row":16,"column":33},"action":"insert","lines":["i"]},{"start":{"row":16,"column":33},"end":{"row":16,"column":34},"action":"insert","lines":["p"]},{"start":{"row":16,"column":34},"end":{"row":16,"column":35},"action":"insert","lines":["e"]},{"start":{"row":16,"column":35},"end":{"row":16,"column":36},"action":"insert","lines":["s"]}],[{"start":{"row":15,"column":0},"end":{"row":16,"column":36},"action":"remove","lines":["\"\"\" collections \"\"\"","recipe_collection = mongo.db.recipes"],"id":6196}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":6197},{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"remove","lines":["",""]},{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":15,"column":20},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":6198},{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":36},"action":"insert","lines":["\"\"\" collections \"\"\"","recipe_collection = mongo.db.recipes"],"id":6199}],[{"start":{"row":16,"column":0},"end":{"row":18,"column":36},"action":"remove","lines":["","\"\"\" collections \"\"\"","recipe_collection = mongo.db.recipes"],"id":6200},{"start":{"row":15,"column":20},"end":{"row":16,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":21,"column":59},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":6201},{"start":{"row":22,"column":0},"end":{"row":22,"column":27},"action":"insert","lines":["                           "]}],[{"start":{"row":225,"column":25},"end":{"row":225,"column":26},"action":"remove","lines":["e"],"id":6202},{"start":{"row":225,"column":24},"end":{"row":225,"column":25},"action":"remove","lines":["u"]},{"start":{"row":225,"column":23},"end":{"row":225,"column":24},"action":"remove","lines":["r"]},{"start":{"row":225,"column":22},"end":{"row":225,"column":23},"action":"remove","lines":["T"]}],[{"start":{"row":225,"column":22},"end":{"row":225,"column":23},"action":"insert","lines":["F"],"id":6203},{"start":{"row":225,"column":23},"end":{"row":225,"column":24},"action":"insert","lines":["a"]},{"start":{"row":225,"column":24},"end":{"row":225,"column":25},"action":"insert","lines":["l"]},{"start":{"row":225,"column":25},"end":{"row":225,"column":26},"action":"insert","lines":["s"]},{"start":{"row":225,"column":26},"end":{"row":225,"column":27},"action":"insert","lines":["e"]}],[{"start":{"row":17,"column":15},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":6204}],[{"start":{"row":0,"column":0},"end":{"row":227,"column":0},"action":"remove","lines":["import os","import bcrypt","from flask import Flask, flash, render_template, redirect, request, url_for, \\","    session","from forms.forms import AddRecipeForm, LoginForm, SignupForm","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","from werkzeug.utils import secure_filename","","app = Flask(__name__)","","app.config['MONGO_DBNAME'] = 'bakingBookRecipes'","app.config['MONGO_URI'] = os.getenv('MONGO_URI', 'mongodb://localhost')","app.secret_key = os.getenv('SECRET')","","mongo = PyMongo(app)","","@app.route('/')","","@app.route('/show_recipes')","def show_recipes():","    return render_template('recipes.html',","                           recipes=mongo.db.recipes.find())","                           ","\"\"\"error handler function taken from https://flask.palletsprojects.com/en/1.1.x/patterns/errorpages/\"\"\" ","@app.errorhandler(404)","def page_not_found(e):","    return render_template('404error.html'), 404","","@app.route('/about')","def about():","    return render_template('about.html')","","@app.route('/login', methods=['GET', 'POST'])","def login():","    \"\"\" If user already logged in redirect to homepage \"\"\"","    if 'logged_in' in session:","        return redirect(url_for('show_recipes'))","    \"\"\" If user not logged in, check db for username \"\"\"","    form = LoginForm(request.form)","    if request.method == 'POST':","        users = mongo.db.users","        login_username = users.find_one({'user': request.form['username'","                ]})","        \"\"\" If username exists, check password matches \"\"\"","        if login_username is not None:","            if bcrypt.checkpw(request.form['password'].encode('utf-8'),","                              login_username['password'].encode('utf-8'","                              )):","                session['username'] = request.form['username']","                session['logged_in'] = True","                return redirect(url_for('show_recipes'))","        \"\"\" If username and password combination is not correct \"\"\"","        return render_template('login.html', form=form) \\","            + '<p class=\"invalid-message\">Invalid username / password combination</p>'","    return render_template('login.html', form=form)","","","@app.route('/logout')","def logout():","    session.clear()","    return redirect(url_for('show_recipes'))","","","@app.route('/sign_up', methods=['GET', 'POST'])","def sign_up():","    form = SignupForm(request.form)","    if request.method == 'POST':","        users = mongo.db.users","        \"\"\" Check if username already exists in the db \"\"\"","        existing_user = users.find_one({'user': request.form['username'","                ]})","        \"\"\" If username does not already exist, hash pw and store \"\"\"","        if existing_user is None:","            hashpass = bcrypt.hashpw(request.form['password'","                    ].encode('utf-8'), bcrypt.gensalt())","            users.insert_one({'user': request.form['username'],","                             'password': hashpass.decode(), 'saved_recipes':[]})","            session['username'] = request.form['username']","            \"\"\" Return user to login form to log in \"\"\"","            return redirect(url_for('login'))","        else: flash('That username already exists, please choose another.')","    return render_template('signup.html', form=form)","","","@app.route('/recipe_card/<recipe_id>')","def recipe_card(recipe_id):","    return render_template('recipecard.html',","                           recipes=mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)}))","","","@app.route('/save_recipe/<recipe_id>', methods=['GET', 'POST'])","def save_recipe(recipe_id):","    \"\"\"Check user is logged in \"\"\"","    if 'logged_in' in session:","        recipe = ObjectId(recipe_id)","        user = mongo.db.users.find_one({'user': session['username']})","        saved = user['saved_recipes']","        \"\"\"Check recipe is not already saved\"\"\"","        if recipe not in saved:","            mongo.db.users.update_one({'user': session['username']}, {\"$push\": {\"saved_recipes\": recipe}})","            flash(\"Recipe has been saved\")","        else:","            flash(\"You have already saved this recipe\")","    return render_template('recipecard.html',","                           recipes=mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)}))","","@app.route('/my_saved_recipes', methods=['GET', 'POST'])","def my_saved_recipes():","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        user = mongo.db.users.find_one({'user': session['username']})","        saved = user['saved_recipes']","        return render_template('savedrecipes.html',recipes=mongo.db.recipes.find({'_id': {\"$in\": saved}}))","    return render_template('404error.html')","","@app.route('/unsave_recipe/<recipe_id>', methods=['GET', 'POST'])","def unsave_recipe(recipe_id):","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        user = mongo.db.users.find_one({'user': session['username']})","        \"\"\" Remove recipe from saved_recipes array in db \"\"\"","        mongo.db.users.update_one({'user': session['username']}, {\"$pull\": {\"saved_recipes\": ObjectId(recipe_id)}})","        return redirect(url_for('my_saved_recipes'))","    return render_template('404error.html')","","","@app.route('/submit_recipe', methods=['GET', 'POST'])","def submit_recipe():","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        new_recipe = None","        form = AddRecipeForm(request.form)","        recipes = mongo.db.recipes","        form_normal = request.form.to_dict()","        flat_form = request.form.to_dict(flat=False)","        if request.method == 'POST':","            default_img_url = '/static/images/default.png'","            input_img_url = request.form['recipe_url']","            if input_img_url != '' and input_img_url.lower().endswith(('.png', '.jpg', '.jpeg')):","                recipe_url = input_img_url","            else:","                recipe_url = default_img_url","            new_recipe = recipes.insert_one({","                'recipe_title': form_normal['recipe_title'],","                'sub_title': form_normal['sub_title'],","                'makes': form_normal['makes'],","                'takes': form_normal['takes'],","                'ingredients': flat_form['ingredients'],","                'method': flat_form['method'],","                'created_by': session['username'],","                'recipe_url': recipe_url","                })","            return redirect(url_for('recipe_card',","                            recipe_id=new_recipe.inserted_id))","        return render_template('submitrecipe.html', form=form)","    return render_template('404error.html')","","@app.route('/my_recipes')","def my_recipes():","    if 'logged_in' in session:","        \"\"\" Get username of logged in user \"\"\"","        username = session['username']","        return render_template('myrecipes.html',","                           recipes=mongo.db.recipes.find({'created_by': username}))","    return render_template('404error.html')","","","@app.route('/edit_recipe/<recipe_id>', methods=['GET', 'POST'])","def edit_recipe(recipe_id):","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        recipe = mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)})","        \"\"\" check recipe was created by logged in user \"\"\"","        if recipe['created_by'] == session['username']:","            form = AddRecipeForm()","            \"\"\" Populate AddRecipeForm with data from db \"\"\"","            form = AddRecipeForm(data=recipe)","            form.ingredients.data = recipe['ingredients']","            form.method.data = recipe['method']","            if request.method == 'POST':","                default_img_url = '/static/images/default.png'","                input_img_url = request.form['recipe_url']","                if input_img_url != '' and input_img_url.lower().endswith(('.png', '.jpg', '.jpeg')):","                    recipe_url = input_img_url","                else:","                    recipe_url = default_img_url","                form_normal = request.form.to_dict()","                flat_form = request.form.to_dict(flat=False)","                mongo.db.recipes.update({'_id' : ObjectId(recipe_id)}, {","                    'recipe_title': form_normal['recipe_title'],","                    'sub_title': form_normal['sub_title'],","                    'makes': form_normal['makes'],","                    'takes': form_normal['takes'],","                    'ingredients': flat_form['ingredients'],","                    'method': flat_form['method'],","                    'created_by' : session['username'],","                    'recipe_url': recipe_url","                    })","                return render_template('recipecard.html', recipes=mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)}))","            return render_template('editrecipe.html', recipe=recipe, form=form)","        return render_template('404error.html')","    return render_template('404error.html')","","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        recipes = mongo.db.recipes","        recipes.remove({'_id': ObjectId(recipe_id)})","        return redirect(url_for('my_recipes'))","    return render_template('404error.html')","    ","@app.route('/search_results', methods=[\"GET\", \"POST\"])","def search_results():","    if request.method == 'POST':","        keywords = request.form.get(\"keywords\")","        \"\"\" Text index on mongodb set for recipe title and subtitle\"\"\"","        recipes=mongo.db.recipes.find({\"$text\": { \"$search\": keywords}})","        if recipes.count() == 0:","            flash(\"I'm sorry that search returned no results\")","        return render_template('recipes.html', recipes=recipes )","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'), port=int(os.environ.get('PORT'","            )), debug=False)",""],"id":6205},{"start":{"row":0,"column":0},"end":{"row":232,"column":0},"action":"insert","lines":["import os","import bcrypt","from flask import Flask, flash, render_template, redirect, request, url_for, \\","    session","from forms.forms import AddRecipeForm, LoginForm, SignupForm","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","from werkzeug.utils import secure_filename","","app = Flask(__name__)","","app.config['MONGO_DBNAME'] = 'bakingBookRecipes'","app.config['MONGO_URI'] = os.getenv('MONGO_URI', 'mongodb://localhost')","app.secret_key = os.getenv('SECRET')","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/show_recipes')","def show_recipes():","    return render_template('recipes.html', recipes=mongo.db.recipes.find())","","","@app.errorhandler(404)","def page_not_found(e):","    \"\"\"","    error handler function taken from","    https://flask.palletsprojects.com/en/1.1.x/patterns/errorpages/","    \"\"\"","    return render_template('404error.html'), 404","","","@app.route('/about')","def about():","    return render_template('about.html')","","","@app.route('/login', methods=['GET', 'POST'])","def login():","    \"\"\" If user already logged in redirect to homepage \"\"\"","    if 'logged_in' in session:","        return redirect(url_for('show_recipes'))","    \"\"\" If user not logged in, check db for username \"\"\"","    form = LoginForm(request.form)","    if request.method == 'POST':","        users = mongo.db.users","        login_username = users.find_one({'user': request.form['username']})","        \"\"\" If username exists, check password matches \"\"\"","        if login_username is not None:","            if bcrypt.checkpw(request.form['password'].encode('utf-8'),","                              login_username['password'].encode('utf-8')):","                session['username'] = request.form['username']","                session['logged_in'] = True","                return redirect(url_for('show_recipes'))","        \"\"\" If username and password combination is not correct \"\"\"","        return render_template('login.html', form=form) \\","            + '<p class=\"invalid-message\">Invalid username / password combination</p>'","    return render_template('login.html', form=form)","","","@app.route('/logout')","def logout():","    session.clear()","    return redirect(url_for('show_recipes'))","","","@app.route('/sign_up', methods=['GET', 'POST'])","def sign_up():","    form = SignupForm(request.form)","    if request.method == 'POST':","        users = mongo.db.users","        \"\"\" Check if username already exists in the db \"\"\"","        existing_user = users.find_one({'user': request.form['username']})","        \"\"\" If username does not already exist, hash pw and store \"\"\"","        if existing_user is None:","            hashpass = bcrypt.hashpw(request.form['password'].encode('utf-8'), bcrypt.gensalt())","            users.insert_one({'user': request.form['username'],","                             'password': hashpass.decode(), 'saved_recipes': []})","            session['username'] = request.form['username']","            \"\"\" Return user to login form to log in \"\"\"","            return redirect(url_for('login'))","        else:","            flash('That username already exists, please choose another.')","    return render_template('signup.html', form=form)","","","@app.route('/recipe_card/<recipe_id>')","def recipe_card(recipe_id):","    return render_template('recipecard.html',","                           recipes=mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)}))","","","@app.route('/save_recipe/<recipe_id>', methods=['GET', 'POST'])","def save_recipe(recipe_id):","    \"\"\"Check user is logged in \"\"\"","    if 'logged_in' in session:","        recipe = ObjectId(recipe_id)","        user = mongo.db.users.find_one({'user': session['username']})","        saved = user['saved_recipes']","        \"\"\"Check recipe is not already saved\"\"\"","        if recipe not in saved:","            mongo.db.users.update_one({'user': session['username']}, {\"$push\": {\"saved_recipes\": recipe}})","            flash(\"Recipe has been saved\")","        else:","            flash(\"You have already saved this recipe\")","    return render_template('recipecard.html',","                           recipes=mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)}))","","","@app.route('/my_saved_recipes', methods=['GET', 'POST'])","def my_saved_recipes():","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        user = mongo.db.users.find_one({'user': session['username']})","        saved = user['saved_recipes']","        return render_template('savedrecipes.html', recipes=mongo.db.recipes.find({'_id': {\"$in\": saved}}))","    return render_template('404error.html')","","","@app.route('/unsave_recipe/<recipe_id>', methods=['GET', 'POST'])","def unsave_recipe(recipe_id):","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        user = mongo.db.users.find_one({'user': session['username']})","        \"\"\" Remove recipe from saved_recipes array in db \"\"\"","        mongo.db.users.update_one({'user': session['username']}, {\"$pull\": {\"saved_recipes\": ObjectId(recipe_id)}})","        return redirect(url_for('my_saved_recipes'))","    return render_template('404error.html')","","","@app.route('/submit_recipe', methods=['GET', 'POST'])","def submit_recipe():","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        new_recipe = None","        form = AddRecipeForm(request.form)","        recipes = mongo.db.recipes","        form_normal = request.form.to_dict()","        flat_form = request.form.to_dict(flat=False)","        if request.method == 'POST':","            default_img_url = '/static/images/default.png'","            input_img_url = request.form['recipe_url']","            if input_img_url != '' and input_img_url.lower().endswith(('.png', '.jpg', '.jpeg')):","                recipe_url = input_img_url","            else:","                recipe_url = default_img_url","            new_recipe = recipes.insert_one({","                'recipe_title': form_normal['recipe_title'],","                'sub_title': form_normal['sub_title'],","                'makes': form_normal['makes'],","                'takes': form_normal['takes'],","                'ingredients': flat_form['ingredients'],","                'method': flat_form['method'],","                'created_by': session['username'],","                'recipe_url': recipe_url","                })","            return redirect(url_for('recipe_card',","                            recipe_id=new_recipe.inserted_id))","        return render_template('submitrecipe.html', form=form)","    return render_template('404error.html')","","","@app.route('/my_recipes')","def my_recipes():","    if 'logged_in' in session:","        \"\"\" Get username of logged in user \"\"\"","        username = session['username']","        return render_template('myrecipes.html', recipes=mongo.db.recipes.find({'created_by': username}))","    return render_template('404error.html')","","","@app.route('/edit_recipe/<recipe_id>', methods=['GET', 'POST'])","def edit_recipe(recipe_id):","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        recipe = mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)})","        \"\"\" check recipe was created by logged in user \"\"\"","        if recipe['created_by'] == session['username']:","            form = AddRecipeForm()","            \"\"\" Populate AddRecipeForm with data from db \"\"\"","            form = AddRecipeForm(data=recipe)","            form.ingredients.data = recipe['ingredients']","            form.method.data = recipe['method']","            if request.method == 'POST':","                default_img_url = '/static/images/default.png'","                input_img_url = request.form['recipe_url']","                if input_img_url != '' and input_img_url.lower().endswith(('.png', '.jpg', '.jpeg')):","                    recipe_url = input_img_url","                else:","                    recipe_url = default_img_url","                form_normal = request.form.to_dict()","                flat_form = request.form.to_dict(flat=False)","                mongo.db.recipes.update({'_id': ObjectId(recipe_id)}, {","                    'recipe_title': form_normal['recipe_title'],","                    'sub_title': form_normal['sub_title'],","                    'makes': form_normal['makes'],","                    'takes': form_normal['takes'],","                    'ingredients': flat_form['ingredients'],","                    'method': flat_form['method'],","                    'created_by': session['username'],","                    'recipe_url': recipe_url","                    })","                return render_template('recipecard.html', recipes=mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)}))","            return render_template('editrecipe.html', recipe=recipe, form=form)","        return render_template('404error.html')","    return render_template('404error.html')","","","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","    \"\"\" Check user is logged in \"\"\"","    if 'logged_in' in session:","        recipes = mongo.db.recipes","        recipes.remove({'_id': ObjectId(recipe_id)})","        return redirect(url_for('my_recipes'))","    return render_template('404error.html')","","","@app.route('/search_results', methods=[\"GET\", \"POST\"])","def search_results():","    if request.method == 'POST':","        keywords = request.form.get(\"keywords\")","        \"\"\" Text index on mongodb set for recipe title and subtitle\"\"\"","        recipes = mongo.db.recipes.find({\"$text\": {\"$search\": keywords}})","        if recipes.count() == 0:","            flash(\"I'm sorry that search returned no results\")","        return render_template('recipes.html', recipes=recipes)","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'), port=int(os.environ.get('PORT')), debug=False)",""]}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":42},"action":"remove","lines":["from werkzeug.utils import secure_filename"],"id":6206}],[{"start":{"row":6,"column":34},"end":{"row":7,"column":0},"action":"remove","lines":["",""],"id":6207}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":16,"column":0},"end":{"row":16,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":207,"state":"start","mode":"ace/mode/python"}},"timestamp":1571953671277,"hash":"fb4cb556637b5fd7b9343d9d545f56c40e12014b"}